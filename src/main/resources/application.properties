# DataSource settings: set here your own configurations for the database
# connection. In this example we have "student" as database name and
# "root" as username and mysql as password.

spring.application.name = Student
server.port = 5000

spring.datasource.url = jdbc:mysql://localhost:3306/School?useSSL=false
spring.datasource.username = root
spring.datasource.password = mysql

spring.jpa.database=mysql

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

#spring.jackson.serialization.fail-on-empty-beans=false

debug = false

app.version = 1.0.0